{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","clearButtonHandler","setState","goodSelectHandler","good","this","className","onClick","type","map","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,OAFlB,EAKEC,mBAAqB,WACnB,EAAKC,SAAS,CAAEF,aAAc,MANlC,EASEG,kBAAoB,SAACC,GAAD,OAClB,EAAKL,MAAMC,eAAiBI,EACxB,EAAKF,SAAS,CAAEF,aAAc,KAC9B,EAAKE,SAAS,CAAEF,aAAcI,KAZtC,4CAeE,WAAU,IAAD,OACCJ,EAAiBK,KAAKN,MAAtBC,aAER,OACE,uBAAMM,UAAU,oBAAhB,UAEIN,EAEI,qBAAIM,UAAU,sCAAd,oBACMN,EADN,gBAIE,wBACEO,QAASF,KAAKJ,mBACd,UAAQ,cACRO,KAAK,SACLF,UAAU,mBAId,oBAAIA,UAAU,QAAd,+BAGN,uBAAOA,UAAU,QAAjB,SACE,gCACGT,EAAMY,KAAI,SAACL,GAAD,OACT,qBACE,UAAQ,OAERE,UAAWI,IAAW,CACpB,+BAAgCV,IAAiBI,IAJrD,UAOE,6BACE,wBACEG,QAAS,WACP,EAAKJ,kBAAkBC,IAEzB,UACEJ,IAAiBI,EACb,eACA,YAENI,KAAK,SACLF,UACEI,IAAW,SAAU,CACnB,UAAWV,IAAiBI,IAZlC,SAiBIJ,IAAiBI,EACb,IACA,QAKV,oBAAI,UAAQ,YAAYE,UAAU,eAAlC,SACGF,MA/BEA,iBA3CrB,GAAyBO,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.eee1d672.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n  };\n\n  clearButtonHandler = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  goodSelectHandler = (good: string) => (\n    this.state.selectedGood === good\n      ? this.setState({ selectedGood: '' })\n      : this.setState({ selectedGood: good })\n  );\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {\n          selectedGood\n            ? (\n              <h1 className=\"title is-flex is-align-items-center\">\n                {`${selectedGood} is selected`}\n\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label   */}\n                <button\n                  onClick={this.clearButtonHandler}\n                  data-cy=\"ClearButton\"\n                  type=\"button\"\n                  className=\"delete ml-3\"\n                />\n              </h1>\n            )\n            : <h1 className=\"title\">No goods selected</h1>\n        }\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map((good) => (\n              <tr\n                data-cy=\"Good\"\n                key={good}\n                className={classNames({\n                  'has-background-success-light': selectedGood === good,\n                })}\n              >\n                <td>\n                  <button\n                    onClick={() => {\n                      this.goodSelectHandler(good);\n                    }}\n                    data-cy={\n                      selectedGood === good\n                        ? 'RemoveButton'\n                        : 'AddButton'\n                    }\n                    type=\"button\"\n                    className={\n                      classNames('button', {\n                        'is-info': selectedGood === good,\n                      })\n                    }\n                  >\n                    {\n                      selectedGood === good\n                        ? '-'\n                        : '+'\n                    }\n                  </button>\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />, document.getElementById('root'),\n);\n"],"sourceRoot":""}